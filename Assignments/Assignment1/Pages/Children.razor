@page "/children"
@using Assignment1.Data
@using Assignment1.Persistence
@using Assignment1.Models

@inject NavigationManager NavigationManager
@inject IAdultData AdultData
@inject FileContext FileContext

<div style="background: url(https://image.freepik.com/free-vector/happy-children-jumping-summer-meadow_74855-5852.jpg) " class="page-holder bg-cover">

<h2 class="align-content-sm-center">Children</h2>

<p> Filter by name: <input type="text" @oninput="@(arg => FilterByName(arg))" style="width:200px"/> </p>

@if (childrenToShow == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!childrenToShow.Any())
{
    <p>
        <em>No adults exist. Please add some.</em>
    </p>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-sm-8">
                <table class="table table-hover table-striped thead-dark table-light table-bordered">
                    <thead>
                    <tr>
                        <th>Firstname </th> <th>Lastname</th> <th>Age</th> <th>Interests</th><th>Pets</th>
                    </tr>
                    </thead>
                    <tbody>

                    @*
          @foreach (var adult in adultsToShow)
             {
        <tr>
            <td>@adult..Id</td>
            <td>@adult.FirstName</td>
            <td>@adult.LastName</td>
            <td>@adult.HairColor</td>
            <td>@adult.EyeColor</td>
            <td>@adult.Age</td>
            <td>@adult.</td>
            <td>@adult.Height</td>
            <td>@adult.Sex</td>
            
            }*@

                    @foreach (var child in childrenToShow)
                    {
                        <tr>


                            <td>@child.FirstName</td>
                            <td>@child.LastName</td>
                            <td>@child.Age</td>
                            <td>@child.InterestToString()</td>
                            <td>@child.petsToString()</td>
                        </tr>
                    }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
</div>

@* <button @onclick="@(() => AddPerson())" class="btn btn-primary"> Add adult </button> *@


@code {

    private IList<Child> childrenToShow;
    private IList<Child> allChildren;
    private string? filterByString;


    protected override async Task OnInitializedAsync()
    {
        allChildren = AdultData.GetChildren();
        childrenToShow = allChildren;
    }

    private void FilterByName(ChangeEventArgs changeEventArgs)
    {
        filterByString = null;
        try
        {
            filterByString = changeEventArgs.Value.ToString();
        }
        catch (Exception e)
        {
        }
        ExecuteFilter();
    }

    private void ExecuteFilter()
    {
        childrenToShow = allChildren.Where(C => (filterByString != null && C.FirstName.ToLower().StartsWith(filterByString.ToLower()) ||
                                                 C.LastName.ToLower().StartsWith(filterByString.ToLower()) || filterByString == null)).ToList();
    }


    private void RemoveAdult(int childID)
    {
        Child childToRemove = allChildren.First(c => c.Id == childID);
        AdultData.RemoveAdult(childID);
        allChildren.Remove(childToRemove);
        childrenToShow.Remove(childToRemove);
    }

    private void AddPerson()
    {
        NavigationManager.NavigateTo("/AddPerson");
    }



}